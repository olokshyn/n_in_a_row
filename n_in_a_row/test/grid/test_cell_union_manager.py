import unittest

from n_in_a_row.grid.grid_index import GridIndex
from n_in_a_row.grid.cell_union_manager import CellUnionManager


class TestUnite(unittest.TestCase):

    def test_empty(self):
        union = CellUnionManager()
        self.assertTrue(union.are_united(GridIndex(0, 0), GridIndex(0, 0)))
        self.assertFalse(union.are_united(GridIndex(0, 1), GridIndex(0, 0)))
        self.assertFalse(union.are_united(GridIndex(5, 6), GridIndex(3, 1)))

        union.unite_cells(GridIndex(0, 0), GridIndex(0, 0))
        self.assertTrue(union.are_united(GridIndex(0, 0), GridIndex(0, 0)))
        self.assertFalse(union.are_united(GridIndex(0, 1), GridIndex(0, 0)))
        self.assertFalse(union.are_united(GridIndex(5, 6), GridIndex(3, 1)))

    def test_union_of_two(self):
        union = CellUnionManager()
        union.unite_cells(GridIndex(2, 3), GridIndex(1, 5))
        self.assertTrue(union.are_united(GridIndex(2, 3), GridIndex(2, 3)))
        self.assertTrue(union.are_united(GridIndex(1, 5), GridIndex(1, 5)))
        self.assertTrue(union.are_united(GridIndex(2, 3), GridIndex(1, 5)))
        self.assertFalse(union.are_united(GridIndex(2, 3), GridIndex(2, 2)))
        self.assertFalse(union.are_united(GridIndex(1, 5), GridIndex(1, 0)))

    def test_one_large_union(self):
        union = CellUnionManager()
        union.unite_cells(GridIndex(0, 0), GridIndex(1, 1))
        union.unite_cells(GridIndex(1, 1), GridIndex(2, 2))
        union.unite_cells(GridIndex(2, 2), GridIndex(3, 3))
        union.unite_cells(GridIndex(3, 3), GridIndex(4, 4))
        union.unite_cells(GridIndex(4, 4), GridIndex(0, 1))
        union.unite_cells(GridIndex(0, 1), GridIndex(0, 2))
        union.unite_cells(GridIndex(0, 2), GridIndex(0, 3))
        union.unite_cells(GridIndex(0, 3), GridIndex(0, 4))

        self.assertTrue(union.are_united(GridIndex(0, 0), GridIndex(0, 0)))
        self.assertTrue(union.are_united(GridIndex(0, 0), GridIndex(0, 4)))
        self.assertTrue(union.are_united(GridIndex(0, 0), GridIndex(0, 3)))
        self.assertTrue(union.are_united(GridIndex(0, 0), GridIndex(0, 2)))
        self.assertTrue(union.are_united(GridIndex(0, 0), GridIndex(0, 1)))
        self.assertTrue(union.are_united(GridIndex(0, 0), GridIndex(4, 4)))
        self.assertTrue(union.are_united(GridIndex(0, 0), GridIndex(3, 3)))
        self.assertTrue(union.are_united(GridIndex(0, 0), GridIndex(2, 2)))
        self.assertTrue(union.are_united(GridIndex(0, 0), GridIndex(1, 1)))

        self.assertTrue(union.are_united(GridIndex(1, 1), GridIndex(1, 1)))
        self.assertTrue(union.are_united(GridIndex(1, 1), GridIndex(0, 4)))
        self.assertTrue(union.are_united(GridIndex(1, 1), GridIndex(0, 3)))
        self.assertTrue(union.are_united(GridIndex(1, 1), GridIndex(0, 2)))
        self.assertTrue(union.are_united(GridIndex(1, 1), GridIndex(0, 1)))
        self.assertTrue(union.are_united(GridIndex(1, 1), GridIndex(4, 4)))
        self.assertTrue(union.are_united(GridIndex(1, 1), GridIndex(3, 3)))
        self.assertTrue(union.are_united(GridIndex(1, 1), GridIndex(2, 2)))
        self.assertTrue(union.are_united(GridIndex(1, 1), GridIndex(0, 0)))

        self.assertTrue(union.are_united(GridIndex(2, 2), GridIndex(2, 2)))
        self.assertTrue(union.are_united(GridIndex(2, 2), GridIndex(0, 4)))
        self.assertTrue(union.are_united(GridIndex(2, 2), GridIndex(0, 3)))
        self.assertTrue(union.are_united(GridIndex(2, 2), GridIndex(0, 2)))
        self.assertTrue(union.are_united(GridIndex(2, 2), GridIndex(0, 1)))
        self.assertTrue(union.are_united(GridIndex(2, 2), GridIndex(4, 4)))
        self.assertTrue(union.are_united(GridIndex(2, 2), GridIndex(3, 3)))
        self.assertTrue(union.are_united(GridIndex(2, 2), GridIndex(1, 1)))
        self.assertTrue(union.are_united(GridIndex(2, 2), GridIndex(0, 0)))

        self.assertTrue(union.are_united(GridIndex(3, 3), GridIndex(3, 3)))
        self.assertTrue(union.are_united(GridIndex(3, 3), GridIndex(0, 4)))
        self.assertTrue(union.are_united(GridIndex(3, 3), GridIndex(0, 3)))
        self.assertTrue(union.are_united(GridIndex(3, 3), GridIndex(0, 2)))
        self.assertTrue(union.are_united(GridIndex(3, 3), GridIndex(0, 1)))
        self.assertTrue(union.are_united(GridIndex(3, 3), GridIndex(4, 4)))
        self.assertTrue(union.are_united(GridIndex(3, 3), GridIndex(2, 2)))
        self.assertTrue(union.are_united(GridIndex(3, 3), GridIndex(1, 1)))
        self.assertTrue(union.are_united(GridIndex(3, 3), GridIndex(0, 0)))

        self.assertTrue(union.are_united(GridIndex(4, 4), GridIndex(4, 4)))
        self.assertTrue(union.are_united(GridIndex(4, 4), GridIndex(0, 4)))
        self.assertTrue(union.are_united(GridIndex(4, 4), GridIndex(0, 3)))
        self.assertTrue(union.are_united(GridIndex(4, 4), GridIndex(0, 2)))
        self.assertTrue(union.are_united(GridIndex(4, 4), GridIndex(0, 1)))
        self.assertTrue(union.are_united(GridIndex(4, 4), GridIndex(3, 3)))
        self.assertTrue(union.are_united(GridIndex(4, 4), GridIndex(2, 2)))
        self.assertTrue(union.are_united(GridIndex(4, 4), GridIndex(1, 1)))
        self.assertTrue(union.are_united(GridIndex(4, 4), GridIndex(0, 0)))

        self.assertTrue(union.are_united(GridIndex(0, 1), GridIndex(0, 1)))
        self.assertTrue(union.are_united(GridIndex(0, 1), GridIndex(0, 4)))
        self.assertTrue(union.are_united(GridIndex(0, 1), GridIndex(0, 3)))
        self.assertTrue(union.are_united(GridIndex(0, 1), GridIndex(0, 2)))
        self.assertTrue(union.are_united(GridIndex(0, 1), GridIndex(4, 4)))
        self.assertTrue(union.are_united(GridIndex(0, 1), GridIndex(3, 3)))
        self.assertTrue(union.are_united(GridIndex(0, 1), GridIndex(2, 2)))
        self.assertTrue(union.are_united(GridIndex(0, 1), GridIndex(1, 1)))
        self.assertTrue(union.are_united(GridIndex(0, 1), GridIndex(0, 0)))

        self.assertTrue(union.are_united(GridIndex(0, 2), GridIndex(0, 2)))
        self.assertTrue(union.are_united(GridIndex(0, 2), GridIndex(0, 4)))
        self.assertTrue(union.are_united(GridIndex(0, 2), GridIndex(0, 3)))
        self.assertTrue(union.are_united(GridIndex(0, 2), GridIndex(0, 1)))
        self.assertTrue(union.are_united(GridIndex(0, 2), GridIndex(4, 4)))
        self.assertTrue(union.are_united(GridIndex(0, 2), GridIndex(3, 3)))
        self.assertTrue(union.are_united(GridIndex(0, 2), GridIndex(2, 2)))
        self.assertTrue(union.are_united(GridIndex(0, 2), GridIndex(1, 1)))
        self.assertTrue(union.are_united(GridIndex(0, 2), GridIndex(0, 0)))

        self.assertTrue(union.are_united(GridIndex(0, 3), GridIndex(0, 3)))
        self.assertTrue(union.are_united(GridIndex(0, 3), GridIndex(0, 4)))
        self.assertTrue(union.are_united(GridIndex(0, 3), GridIndex(0, 2)))
        self.assertTrue(union.are_united(GridIndex(0, 3), GridIndex(0, 1)))
        self.assertTrue(union.are_united(GridIndex(0, 3), GridIndex(4, 4)))
        self.assertTrue(union.are_united(GridIndex(0, 3), GridIndex(3, 3)))
        self.assertTrue(union.are_united(GridIndex(0, 3), GridIndex(2, 2)))
        self.assertTrue(union.are_united(GridIndex(0, 3), GridIndex(1, 1)))
        self.assertTrue(union.are_united(GridIndex(0, 3), GridIndex(0, 0)))

        self.assertTrue(union.are_united(GridIndex(0, 4), GridIndex(0, 4)))
        self.assertTrue(union.are_united(GridIndex(0, 4), GridIndex(0, 3)))
        self.assertTrue(union.are_united(GridIndex(0, 4), GridIndex(0, 2)))
        self.assertTrue(union.are_united(GridIndex(0, 4), GridIndex(0, 1)))
        self.assertTrue(union.are_united(GridIndex(0, 4), GridIndex(4, 4)))
        self.assertTrue(union.are_united(GridIndex(0, 4), GridIndex(3, 3)))
        self.assertTrue(union.are_united(GridIndex(0, 4), GridIndex(2, 2)))
        self.assertTrue(union.are_united(GridIndex(0, 4), GridIndex(1, 1)))
        self.assertTrue(union.are_united(GridIndex(0, 4), GridIndex(0, 0)))

        self.assertFalse(union.are_united(GridIndex(0, 0), GridIndex(5, 5)))
        self.assertFalse(union.are_united(GridIndex(1, 1), GridIndex(5, 1)))
        self.assertFalse(union.are_united(GridIndex(2, 2), GridIndex(5, 2)))
        self.assertFalse(union.are_united(GridIndex(3, 3), GridIndex(5, 3)))
        self.assertFalse(union.are_united(GridIndex(4, 4), GridIndex(5, 4)))
        self.assertFalse(union.are_united(GridIndex(0, 1), GridIndex(5, 1)))
        self.assertFalse(union.are_united(GridIndex(0, 1), GridIndex(5, 2)))
        self.assertFalse(union.are_united(GridIndex(0, 2), GridIndex(5, 3)))
        self.assertFalse(union.are_united(GridIndex(4, 3), GridIndex(5, 4)))

    def test_two_unions(self):
        union = CellUnionManager()
        union.unite_cells(GridIndex(1, 0), GridIndex(1, 1))
        union.unite_cells(GridIndex(1, 1), GridIndex(1, 2))
        union.unite_cells(GridIndex(1, 2), GridIndex(1, 3))
        union.unite_cells(GridIndex(1, 3), GridIndex(1, 4))
        union.unite_cells(GridIndex(2, 0), GridIndex(2, 1))
        union.unite_cells(GridIndex(2, 1), GridIndex(2, 2))
        union.unite_cells(GridIndex(2, 2), GridIndex(2, 3))
        union.unite_cells(GridIndex(2, 3), GridIndex(2, 4))

        self.assertTrue(union.are_united(GridIndex(1, 0), GridIndex(1, 0)))
        self.assertTrue(union.are_united(GridIndex(1, 0), GridIndex(1, 1)))
        self.assertTrue(union.are_united(GridIndex(1, 0), GridIndex(1, 2)))
        self.assertTrue(union.are_united(GridIndex(1, 0), GridIndex(1, 3)))
        self.assertTrue(union.are_united(GridIndex(1, 0), GridIndex(1, 4)))

        self.assertTrue(union.are_united(GridIndex(1, 1), GridIndex(1, 1)))
        self.assertTrue(union.are_united(GridIndex(1, 1), GridIndex(1, 0)))
        self.assertTrue(union.are_united(GridIndex(1, 1), GridIndex(1, 2)))
        self.assertTrue(union.are_united(GridIndex(1, 1), GridIndex(1, 3)))
        self.assertTrue(union.are_united(GridIndex(1, 1), GridIndex(1, 4)))

        self.assertTrue(union.are_united(GridIndex(1, 2), GridIndex(1, 2)))
        self.assertTrue(union.are_united(GridIndex(1, 2), GridIndex(1, 0)))
        self.assertTrue(union.are_united(GridIndex(1, 2), GridIndex(1, 1)))
        self.assertTrue(union.are_united(GridIndex(1, 2), GridIndex(1, 3)))
        self.assertTrue(union.are_united(GridIndex(1, 2), GridIndex(1, 4)))

        self.assertTrue(union.are_united(GridIndex(1, 3), GridIndex(1, 3)))
        self.assertTrue(union.are_united(GridIndex(1, 3), GridIndex(1, 0)))
        self.assertTrue(union.are_united(GridIndex(1, 3), GridIndex(1, 1)))
        self.assertTrue(union.are_united(GridIndex(1, 3), GridIndex(1, 2)))
        self.assertTrue(union.are_united(GridIndex(1, 3), GridIndex(1, 4)))

        self.assertTrue(union.are_united(GridIndex(1, 4), GridIndex(1, 4)))
        self.assertTrue(union.are_united(GridIndex(1, 4), GridIndex(1, 0)))
        self.assertTrue(union.are_united(GridIndex(1, 4), GridIndex(1, 1)))
        self.assertTrue(union.are_united(GridIndex(1, 4), GridIndex(1, 2)))
        self.assertTrue(union.are_united(GridIndex(1, 4), GridIndex(1, 3)))

        self.assertTrue(union.are_united(GridIndex(2, 0), GridIndex(2, 0)))
        self.assertTrue(union.are_united(GridIndex(2, 0), GridIndex(2, 1)))
        self.assertTrue(union.are_united(GridIndex(2, 0), GridIndex(2, 2)))
        self.assertTrue(union.are_united(GridIndex(2, 0), GridIndex(2, 3)))
        self.assertTrue(union.are_united(GridIndex(2, 0), GridIndex(2, 4)))

        self.assertTrue(union.are_united(GridIndex(2, 1), GridIndex(2, 1)))
        self.assertTrue(union.are_united(GridIndex(2, 1), GridIndex(2, 0)))
        self.assertTrue(union.are_united(GridIndex(2, 1), GridIndex(2, 2)))
        self.assertTrue(union.are_united(GridIndex(2, 1), GridIndex(2, 3)))
        self.assertTrue(union.are_united(GridIndex(2, 1), GridIndex(2, 4)))

        self.assertTrue(union.are_united(GridIndex(2, 2), GridIndex(2, 2)))
        self.assertTrue(union.are_united(GridIndex(2, 2), GridIndex(2, 0)))
        self.assertTrue(union.are_united(GridIndex(2, 2), GridIndex(2, 1)))
        self.assertTrue(union.are_united(GridIndex(2, 2), GridIndex(2, 3)))
        self.assertTrue(union.are_united(GridIndex(2, 2), GridIndex(2, 4)))

        self.assertTrue(union.are_united(GridIndex(2, 3), GridIndex(2, 3)))
        self.assertTrue(union.are_united(GridIndex(2, 3), GridIndex(2, 0)))
        self.assertTrue(union.are_united(GridIndex(2, 3), GridIndex(2, 1)))
        self.assertTrue(union.are_united(GridIndex(2, 3), GridIndex(2, 2)))
        self.assertTrue(union.are_united(GridIndex(2, 3), GridIndex(2, 4)))

        self.assertTrue(union.are_united(GridIndex(2, 4), GridIndex(2, 4)))
        self.assertTrue(union.are_united(GridIndex(2, 4), GridIndex(2, 0)))
        self.assertTrue(union.are_united(GridIndex(2, 4), GridIndex(2, 1)))
        self.assertTrue(union.are_united(GridIndex(2, 4), GridIndex(2, 2)))
        self.assertTrue(union.are_united(GridIndex(2, 4), GridIndex(2, 3)))

        self.assertFalse(union.are_united(GridIndex(1, 0), GridIndex(2, 0)))
        self.assertFalse(union.are_united(GridIndex(1, 0), GridIndex(2, 1)))
        self.assertFalse(union.are_united(GridIndex(1, 0), GridIndex(2, 2)))
        self.assertFalse(union.are_united(GridIndex(1, 0), GridIndex(2, 3)))
        self.assertFalse(union.are_united(GridIndex(1, 0), GridIndex(2, 4)))

        self.assertFalse(union.are_united(GridIndex(1, 1), GridIndex(2, 0)))
        self.assertFalse(union.are_united(GridIndex(1, 1), GridIndex(2, 1)))
        self.assertFalse(union.are_united(GridIndex(1, 1), GridIndex(2, 2)))
        self.assertFalse(union.are_united(GridIndex(1, 1), GridIndex(2, 3)))
        self.assertFalse(union.are_united(GridIndex(1, 1), GridIndex(2, 4)))

        self.assertFalse(union.are_united(GridIndex(1, 2), GridIndex(2, 0)))
        self.assertFalse(union.are_united(GridIndex(1, 2), GridIndex(2, 1)))
        self.assertFalse(union.are_united(GridIndex(1, 2), GridIndex(2, 2)))
        self.assertFalse(union.are_united(GridIndex(1, 2), GridIndex(2, 3)))
        self.assertFalse(union.are_united(GridIndex(1, 2), GridIndex(2, 4)))

        self.assertFalse(union.are_united(GridIndex(1, 3), GridIndex(2, 0)))
        self.assertFalse(union.are_united(GridIndex(1, 3), GridIndex(2, 1)))
        self.assertFalse(union.are_united(GridIndex(1, 3), GridIndex(2, 2)))
        self.assertFalse(union.are_united(GridIndex(1, 3), GridIndex(2, 3)))
        self.assertFalse(union.are_united(GridIndex(1, 3), GridIndex(2, 4)))

        self.assertFalse(union.are_united(GridIndex(1, 4), GridIndex(2, 0)))
        self.assertFalse(union.are_united(GridIndex(1, 4), GridIndex(2, 1)))
        self.assertFalse(union.are_united(GridIndex(1, 4), GridIndex(2, 2)))
        self.assertFalse(union.are_united(GridIndex(1, 4), GridIndex(2, 3)))
        self.assertFalse(union.are_united(GridIndex(1, 4), GridIndex(2, 4)))

    def test_three_unions(self):
        union = CellUnionManager()
        union.unite_cells(GridIndex(1, 0), GridIndex(1, 1))
        union.unite_cells(GridIndex(2, 0), GridIndex(2, 1))
        union.unite_cells(GridIndex(3, 0), GridIndex(3, 1))

        self.assertTrue(union.are_united(GridIndex(1, 0), GridIndex(1, 1)))
        self.assertFalse(union.are_united(GridIndex(1, 0), GridIndex(2, 0)))
        self.assertFalse(union.are_united(GridIndex(1, 0), GridIndex(2, 1)))
        self.assertFalse(union.are_united(GridIndex(1, 1), GridIndex(2, 0)))
        self.assertFalse(union.are_united(GridIndex(1, 1), GridIndex(2, 1)))
        self.assertFalse(union.are_united(GridIndex(1, 0), GridIndex(3, 0)))
        self.assertFalse(union.are_united(GridIndex(1, 0), GridIndex(3, 1)))
        self.assertFalse(union.are_united(GridIndex(1, 1), GridIndex(3, 0)))
        self.assertFalse(union.are_united(GridIndex(1, 1), GridIndex(3, 1)))

        self.assertTrue(union.are_united(GridIndex(2, 0), GridIndex(2, 1)))
        self.assertFalse(union.are_united(GridIndex(2, 0), GridIndex(1, 0)))
        self.assertFalse(union.are_united(GridIndex(2, 0), GridIndex(1, 1)))
        self.assertFalse(union.are_united(GridIndex(2, 1), GridIndex(1, 0)))
        self.assertFalse(union.are_united(GridIndex(2, 1), GridIndex(1, 1)))
        self.assertFalse(union.are_united(GridIndex(2, 0), GridIndex(3, 0)))
        self.assertFalse(union.are_united(GridIndex(2, 0), GridIndex(3, 1)))
        self.assertFalse(union.are_united(GridIndex(2, 1), GridIndex(3, 0)))
        self.assertFalse(union.are_united(GridIndex(2, 1), GridIndex(3, 1)))

        self.assertTrue(union.are_united(GridIndex(3, 0), GridIndex(3, 1)))
        self.assertFalse(union.are_united(GridIndex(3, 0), GridIndex(1, 0)))
        self.assertFalse(union.are_united(GridIndex(3, 0), GridIndex(1, 1)))
        self.assertFalse(union.are_united(GridIndex(3, 1), GridIndex(1, 0)))
        self.assertFalse(union.are_united(GridIndex(3, 1), GridIndex(1, 1)))
        self.assertFalse(union.are_united(GridIndex(3, 0), GridIndex(2, 0)))
        self.assertFalse(union.are_united(GridIndex(3, 0), GridIndex(2, 1)))
        self.assertFalse(union.are_united(GridIndex(3, 1), GridIndex(2, 0)))
        self.assertFalse(union.are_united(GridIndex(3, 1), GridIndex(2, 1)))


class TestGetMaxUnionRootAndSize(unittest.TestCase):

    def test_empty(self):
        union = CellUnionManager()
        root, size = union.get_max_union_root_and_size()
        self.assertEqual(GridIndex(0, 0), root)
        self.assertEqual(1, size)

    def test_one_union(self):
        union = CellUnionManager()
        union.unite_cells(GridIndex(1, 0), GridIndex(1, 1))
        union.unite_cells(GridIndex(1, 1), GridIndex(1, 2))
        union.unite_cells(GridIndex(1, 2), GridIndex(1, 3))
        union.unite_cells(GridIndex(1, 3), GridIndex(1, 4))
        union.unite_cells(GridIndex(1, 4), GridIndex(1, 5))
        root, size = union.get_max_union_root_and_size()
        self.assertEqual(GridIndex(1, 0), root)
        self.assertEqual(6, size)

    def test_two_equal_unions(self):
        union = CellUnionManager()
        union.unite_cells(GridIndex(1, 0), GridIndex(1, 1))
        union.unite_cells(GridIndex(1, 1), GridIndex(1, 2))
        union.unite_cells(GridIndex(1, 2), GridIndex(1, 3))
        union.unite_cells(GridIndex(2, 0), GridIndex(2, 1))
        union.unite_cells(GridIndex(2, 1), GridIndex(2, 2))
        union.unite_cells(GridIndex(2, 2), GridIndex(2, 3))
        root, size = union.get_max_union_root_and_size()
        self.assertEqual(GridIndex(1, 0), root)
        self.assertEqual(4, size)

    def test_two_unions(self):
        union = CellUnionManager()
        union.unite_cells(GridIndex(2, 0), GridIndex(2, 1))
        union.unite_cells(GridIndex(2, 1), GridIndex(2, 2))
        union.unite_cells(GridIndex(2, 2), GridIndex(2, 3))
        union.unite_cells(GridIndex(1, 0), GridIndex(1, 1))
        union.unite_cells(GridIndex(1, 1), GridIndex(1, 2))
        union.unite_cells(GridIndex(1, 2), GridIndex(1, 3))
        union.unite_cells(GridIndex(2, 3), GridIndex(1, 3))

        union.unite_cells(GridIndex(3, 0), GridIndex(3, 1))
        union.unite_cells(GridIndex(3, 1), GridIndex(3, 2))
        union.unite_cells(GridIndex(3, 2), GridIndex(3, 3))

        root, size = union.get_max_union_root_and_size()
        self.assertEqual(GridIndex(2, 0), root)
        self.assertEqual(8, size)

    def test_three_unions(self):
        union = CellUnionManager()
        union.unite_cells(GridIndex(2, 0), GridIndex(2, 1))
        union.unite_cells(GridIndex(2, 1), GridIndex(2, 2))
        union.unite_cells(GridIndex(2, 2), GridIndex(2, 3))
        union.unite_cells(GridIndex(1, 0), GridIndex(1, 1))
        union.unite_cells(GridIndex(1, 1), GridIndex(1, 2))
        union.unite_cells(GridIndex(1, 2), GridIndex(1, 3))
        union.unite_cells(GridIndex(2, 3), GridIndex(1, 3))

        union.unite_cells(GridIndex(4, 0), GridIndex(4, 1))
        union.unite_cells(GridIndex(4, 1), GridIndex(4, 2))
        union.unite_cells(GridIndex(4, 2), GridIndex(4, 3))
        union.unite_cells(GridIndex(3, 0), GridIndex(3, 1))
        union.unite_cells(GridIndex(3, 1), GridIndex(3, 2))
        union.unite_cells(GridIndex(3, 2), GridIndex(3, 3))
        union.unite_cells(GridIndex(4, 3), GridIndex(3, 3))
        union.unite_cells(GridIndex(4, 3), GridIndex(0, 0))

        union.unite_cells(GridIndex(5, 0), GridIndex(5, 1))
        union.unite_cells(GridIndex(5, 1), GridIndex(5, 2))
        union.unite_cells(GridIndex(5, 2), GridIndex(5, 3))
        union.unite_cells(GridIndex(5, 3), GridIndex(5, 4))

        root, size = union.get_max_union_root_and_size()
        self.assertEqual(GridIndex(4, 0), root)
        self.assertEqual(9, size)


if __name__ == '__main__':
    unittest.main()
